────────────────────────────────────────────
■ 通知とサブスクリプションの管理
────────────────────────────────────────────

サブスクライブできる通知の種類

個別のイシュー (Issue) やプルリクエスト (PR)、Gist 上の会話
CI/CD 活動 (GitHub Actions など) に関するワークフローの状態
リポジトリで発生するあらゆるアクティビティ (Issues / PR / Releases / セキュリティアラート / Discussions 等)
リポジトリ全体の全活動 (Watch 設定で「Watching」を選択する形)
GitHub では、以下のような場合に自動的に会話へサブスクライブされることがあります。

自分がイシューやプルリクエストを作成した
スレッドにコメントした
イシューやプルリクエストに割り当てられた (Assignee)
@ユーザー名 でメンションされた
通知の扱い方

会話 (Issue / PR) に興味がなくなった場合は「Unsubscribe」ボタンを押してサブスクライブを解除できます。
リポジトリ全体の「Watch」解除、あるいは通知の種類を細かくカスタマイズして、自分に必要な情報のみ受け取るように設定可能です。
特定ユーザーのメンションが含まれるイシューを見つけたい場合は、検索バーで mentions:@ユーザー名 のように検索することで絞り込めます。
────────────────────────────────────────────
■ GitHub Pages とは
────────────────────────────────────────────

概要

GitHub Pages は、GitHub リポジトリ内の HTML、CSS、JavaScript をそのまま、またはビルド後の静的ファイルとしてホスティングできるサービスです。
個人・組織サイトやプロジェクト専用のサイトなどを無料で公開できます。
手順 (基本的な流れ)

リポジトリの [Settings] (設定) タブを開き、左側のメニューから [Pages] を選択
Deploy ブランチ (例: main) とフォルダー (例: /root あるいは /docs) を指定
「Save」ボタンを押すと数分後に自動ビルドされ、発行用の URL が表示されます
public/ や docs/ ディレクトリなどで Web サイトのファイルを管理するとわかりやすいです
運用時のポイント

テンプレートやジェネレーターを使う場合は Jekyll や Hugo、静的サイトビルダーなどを組み合わせることが多いです。
コードをプッシュしたら数分で更新が反映されるので、ドキュメントやレビューをこまめに行えます。
────────────────────────────────────────────
■ 次の演習ステップ
────────────────────────────────────────────

リポジトリを作成する

GitHub で新しいリポジトリを作成 (名前と説明を設定し、public/private を選択)
新しいブランチを作成する

メイン ブランチから分岐し、開発・実験用のブランチを作成
ターミナル例:
git checkout -b new-feature
ファイルをコミットする

ブランチ上でファイルを作成または変更し、ステージングしてコミット
ターミナル例:
git add .
git commit -m "Add new feature"
プルリクエスト (pull request) を開く

GitHub 上で新しく作成したブランチを確認し、[Compare & pull request] ボタンからプルリクエストを作成
変更内容や目的をわかりやすく記載し、必要に応じてレビュアーやラベルを設定
プルリクエストをマージする

レビュアーからの承認やテストの完了を確認後、プルリクエストをマージ
作業が完了したら不要になったブランチは削除し、リポジトリをスッキリ管理
────────────────────────────────────────────
■ まとめ
────────────────────────────────────────────

GitHub 上では、Issue やプルリクエストに興味を持ったらサブスクライブすることで通知を受け取り、不要になったらいつでも解除できます。
個人または組織で Web サイトを公開するときは GitHub Pages が便利です。リポジトリから直接ホスティングでき、ドキュメントなどの更新がしやすくなります。
一連の流れ (リポジトリ作成 → ブランチ作成 → ファイル編集 & コミット → プルリクエスト作成 → マージ) は、GitHub でのバージョン管理や共同開発の基本サイクルです。
